Expresiones Regulares 

Identificadores	[a-zA-Z_][a-zA-Z0-9_]* 
Números enteros	[0-9]+
Números flotantes	[0-9]+(\.[0-9]+)?
Cadenas de texto	\".*?\"
Operadores aritméticos	[\+\-\*/]
Operadores relacionales	[==, !=, >, <]
Palabras clave	[int, float, string, bool, if, else, while, return, read, write, print]
Símbolos especiales	[\{\}\(\);=]




<programa> ::= <lista-declaraciones> <lista_funciones> <lista-sentencias>

<lista-declaraciones> ::= <declaracion> <lista-declaraciones> | ε
<declaracion> ::= <tipo>		

<tipo> ::= "int" <identificador> "=" <expresion> ";"
	| "float" <identificador> "=" <expresion> ";" 
	| "string" <identificador> "=" <string> ";"
	| "bool" <identificador> "=" <booleano> ";"

<expresion> ::= <expresion_suma>

<expresion_suma> ::= <expresion_multiplicacion> ( ("+" | "-") <expresion_multiplicacion> )*

<expresion_multiplicacion> ::= <expresion_parentesis> ( ("*" | "/") <expresion_parentesis> )*

<expresion_parentesis> ::= "(" <expresion> ")" | <numero> | <identificador>

<booleano> ::= "True" | "False" | <identificador> <operador_relacional> <identificador> | <numero> <operador_relacional> <numero>

<identificador> ::= [a-zA-Z_][a-zA-Z0-9_]*

<lista_funciones> ::= <funcion> <lista_funciones> | ε

<funcion> ::= "def" <identificador> "(" <parametros> ")" <bloque>
<parametros> ::= <var> <identificador> <mas-parametros> | ε
<mas-parametros> ::= "," <var> <identificador> <mas-parametros> | ε

<var> ::= "int" | "float" | "string" | "bool"

<bloque> ::= "{" <lista-sentencias> "}"

<lista-sentencias> ::= <sentencia> <lista-sentencias> | ε

<sentencia> ::= <asignacion>
              | <estructura-control>
              | <entrada-salida>
              | <llamada-funcion>

<asignacion> ::= <identificador> "=" <expresion> ";" 
		|<identificador> "=" <string> ";"
		|<identificador> "=" <booleano> ";"

<estructura-control> ::= "if" "(" <booleano> ")" <bloque> <else-opcional>
                       | "while" "(" <booleano> ")" <bloque>

<else-opcional> ::= "else" <bloque> | ε

<entrada-salida> ::= "read" "(" <string> ")" ";" // Ruta
                   | "write" "(" <contenido> , <string> ")" ";" // Contenido, Ruta
		   | "Print" "(" <contenido> ")" ";"

<contenido> ::= <string> | <identificador>

<string> ::= Cadena de texto
<operador-aritmetico> ::= "+" | "-" | "*" | "/"
<operador-relacional> ::= "==" | "!=" | ">" | "<"

<llamada-funcion> ::= <identificador> "(" <argumentos> ")" ";"
<argumentos> ::= <expresion> <mas-argumentos> | ε
<mas-argumentos> ::= "," <expresion> <mas-argumentos> | ε
